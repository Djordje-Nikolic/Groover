<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:assist="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
             xmlns:utils="using:Groover.AvaloniaUI.Utils"
             xmlns:viewModels="using:Groover.AvaloniaUI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Groover.AvaloniaUI.Views.AppView"
             Name="Root">
  <UserControl.Resources>
    <StackLayout x:Key="VerticalStackLayout"
                        Orientation="Vertical"
                        Spacing="12"/>
    <utils:IsAdminConverter x:Key="isAdminConverter"/>
    <utils:AreEqualIntegersConverter x:Key="areEqualIntegersConverter" />
  </UserControl.Resources>
  <Grid ColumnDefinitions="64, *, 164" RowDefinitions="40, *, Auto" ShowGridLines="true" HorizontalAlignment="Stretch">
    <StackPanel Orientation="Vertical" Grid.Column="0" Grid.RowSpan="3"
                HorizontalAlignment="Center" Margin="7,12,7,12">
      <Button  Width="50" Height="50"
                    ToolTip.Tip="Home"
                    Command="{Binding ElementName=Root, Path=DataContext.SwitchToHomeCommand}"
                    assist:ButtonAssist.CornerRadius="50">
        <TextBlock Text="Home"
                   HorizontalAlignment="Center"
                   TextAlignment="Center"
                   TextWrapping="Wrap"/>
      </Button>
      <ScrollViewer VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                    Margin="0,12,0,0">
        <ItemsRepeater Items="{Binding UserGroups}"
                       Layout="{DynamicResource VerticalStackLayout}"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch">
          <ItemsRepeater.ItemTemplate>
            <DataTemplate>
              <Button Width="50" Height="50"
                      ToolTip.Tip="{Binding Group.Name}"
                      Command="{Binding ElementName=Root, Path=DataContext.SwitchGroupDisplay}"
                      CommandParameter="{Binding Group.Id}"
                      assist:ButtonAssist.CornerRadius="50">
                <Button.ContextMenu>
                  <ContextMenu>
                    <MenuItem Header="Invite user"
                              Command="{Binding DataContext.InviteUserCommand, ElementName=Root}"
                              CommandParameter="{Binding Group}"
                              IsEnabled="{Binding GroupRole, Converter={StaticResource isAdminConverter}}"></MenuItem>
                    <MenuItem Header="Leave group"
                              Command="{Binding DataContext.LeaveGroupCommand, ElementName=Root}"
                              CommandParameter="{Binding Group}"></MenuItem>
                    <MenuItem Header="Delete group"
                              Command="{Binding DataContext.DeleteGroupCommand, ElementName=Root}"
                              CommandParameter="{Binding Group}"
                              IsEnabled="{Binding GroupRole, Converter={StaticResource isAdminConverter}}"></MenuItem>
                  </ContextMenu>
                </Button.ContextMenu>
                <TextBlock Text="{Binding Group.Id}"
                           HorizontalAlignment="Center"
                           TextAlignment="Center"
                           TextWrapping="Wrap"/>
              </Button>
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollViewer>
    </StackPanel>  
    <ScrollViewer Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"
             VerticalScrollBarVisibility="Auto"
             HorizontalScrollBarVisibility="Disabled">
      <ItemsRepeater Items="{Binding ActiveGroup.GroupUsers}"
                     Name="userListBox"
                     Layout="{DynamicResource VerticalStackLayout}" 
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     Margin="0,5,0,5">
        <ItemsRepeater.ItemTemplate>
          <DataTemplate>
            <Button Classes="Flat" HorizontalContentAlignment="Left" 
                    ToolTip.Tip="{Binding GroupRole}">
              <Grid Margin="4,0,0,4"
                  ColumnDefinitions="40, *"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  ShowGridLines="True">                
                <Ellipse Grid.Column="0"
                         Height="35" Width="35"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center">
                  <Ellipse.Fill>
                    <SolidColorBrush Color="Red"></SolidColorBrush>
                  </Ellipse.Fill>
                </Ellipse>
                <TextBlock Padding="5,0,0,0" Grid.Column="1" Text="{Binding User.Username}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           TextWrapping="NoWrap">
                </TextBlock>
              </Grid>
              <Button.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="Change role"
                            Command="{Binding DataContext.ChangeRoleCommand, ElementName=Root}"
                            CommandParameter="{Binding User}"
                            IsEnabled="{Binding DataContext.IsActiveGroupAdmin, ElementName=Root}">
                  </MenuItem>
                  <MenuItem Header="Kick user"
                            Command="{Binding DataContext.KickUserCommand, ElementName=Root}"
                            CommandParameter="{Binding User}"
                            IsEnabled="{Binding DataContext.IsActiveGroupAdmin, ElementName=Root}">
                    <MenuItem.IsVisible>
                      <MultiBinding Converter="{StaticResource areEqualIntegersConverter}" ConverterParameter="true">
                        <Binding Path="User.Id" FallbackValue="-1" Mode="OneWay"></Binding>
                        <Binding Path="DataContext.LoginResponse.User.Id" ElementName="Root" Mode="OneWay"></Binding>
                      </MultiBinding>
                    </MenuItem.IsVisible>
                  </MenuItem>
                </ContextMenu>
              </Button.ContextMenu>
            </Button>           
          </DataTemplate>
        </ItemsRepeater.ItemTemplate>
      </ItemsRepeater>
    </ScrollViewer>
  </Grid>
</UserControl>
