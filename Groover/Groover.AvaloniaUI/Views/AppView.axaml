<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:assist="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
             xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:utils="using:Groover.AvaloniaUI.Utils"
             xmlns:views="using:Groover.AvaloniaUI.Views"
             xmlns:viewModels="using:Groover.AvaloniaUI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             MinWidth="550" MinHeight="400"
             x:Class="Groover.AvaloniaUI.Views.AppView"
             Name="Root">
  <UserControl.Resources>
    <StackLayout x:Key="VerticalStackLayout"
                        Orientation="Vertical"/>
    <utils:IsAdminConverter x:Key="isAdminConverter"/>
    <utils:AreEqualIntegersConverter x:Key="areEqualIntegersConverter" />
  </UserControl.Resources>
  <Grid ColumnDefinitions="64, *, 164" RowDefinitions="55, *, Auto" ShowGridLines="true" HorizontalAlignment="Stretch">
    <StackPanel Orientation="Vertical" Grid.Column="0" Grid.RowSpan="3"
                MinWidth="64" Margin="0,6,0,12"
                HorizontalAlignment="Center">
      <Panel HorizontalAlignment="Stretch" Width="52" Height="52" Margin="7,6,7,6" VerticalAlignment="Center">
        <Ellipse Width="52" Height="52"
                 StrokeThickness="2" Stroke="Red"
                 IsVisible="{Binding ActiveGroup, Converter={x:Static ObjectConverters.IsNull}}">
        </Ellipse>
        <Button Width="50" Height="50"
              ToolTip.Tip="Home"
              Command="{Binding ElementName=Root, Path=DataContext.SwitchToHomeCommand}"
              assist:ButtonAssist.CornerRadius="50">
          <TextBlock Text="Home"
                     HorizontalAlignment="Center"
                     TextAlignment="Center"
                     TextWrapping="Wrap"/>
        </Button>
      </Panel>
      <ScrollViewer VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                    Margin="0,0,0,0">
        <ItemsRepeater Items="{Binding LoggedInUser.UserGroups}"
                       Layout="{DynamicResource VerticalStackLayout}"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch">
          <ItemsRepeater.ItemTemplate>
            <DataTemplate>
              <Panel HorizontalAlignment="Stretch" Width="52" Height="52" Margin="7,6,7,6" VerticalAlignment="Center">
                <Ellipse Width="52" Height="52" StrokeThickness="2" Stroke="Red">
                  <Ellipse.IsVisible>
                    <MultiBinding Converter="{StaticResource areEqualIntegersConverter}" ConverterParameter="false">
                      <Binding Path="Group.Id" FallbackValue="-1" Mode="OneWay"></Binding>
                      <Binding Path="DataContext.ActiveGroup.Id" FallbackValue="-2" ElementName="Root" Mode="OneWay"></Binding>
                    </MultiBinding>
                  </Ellipse.IsVisible>
                </Ellipse>
                <Button Width="50" Height="50"
                        Classes="Flat"
                        ToolTip.Tip="{Binding Group.Name}"
                        Command="{Binding ElementName=Root, Path=DataContext.SwitchGroupDisplay}"
                        CommandParameter="{Binding Group.Id}"
                        assist:ButtonAssist.CornerRadius="50">
                  <Button.ContextMenu>
                    <ContextMenu>
                      <ContextMenu.Template>
                        <ControlTemplate TargetType="ContextMenu">
                          <styles:Card Padding="2" Margin="0">
                            <StackPanel>
                              <StackPanel.Styles>
                                <Style Selector="Button">
                                  <Setter Property="Padding" Value="2,2,2,2"></Setter>
                                  <Setter Property="Margin" Value="0,2,0,2"></Setter>
                                  <Setter Property="assist:ButtonAssist.CornerRadius" Value="2"></Setter>
                                </Style>
                                <Style Selector="Button > TextBlock">
                                  <Setter Property="FontSize" Value="13"></Setter>
                                  <Setter Property="FontWeight" Value="Normal"></Setter>
                                  <Setter Property="Foreground" Value="{StaticResource ThemeBackgroundBrush}"></Setter>
                                </Style>
                              </StackPanel.Styles>
                              <Button   Classes="Flat"
                                        Command="{Binding DataContext.InviteUserCommand, ElementName=Root}"
                                        CommandParameter="{Binding Group}"
                                        IsEnabled="{Binding GroupRole, Converter={StaticResource isAdminConverter}}">
                                <TextBlock>Invite user</TextBlock>
                              </Button>
                              <Button   Classes="Flat"
                                        Command="{Binding DataContext.EditGroupCommand, ElementName=Root}"
                                        CommandParameter="{Binding Group}"
                                        IsEnabled="{Binding GroupRole, Converter={StaticResource isAdminConverter}}">
                                <TextBlock>Edit group</TextBlock>
                              </Button>
                              <Button   Classes="Flat"
                                        Command="{Binding DataContext.LeaveGroupCommand, ElementName=Root}"
                                        CommandParameter="{Binding Group}">
                                <TextBlock>Leave group</TextBlock>
                              </Button>
                              <Button   Classes="Flat"
                                        Command="{Binding DataContext.DeleteGroupCommand, ElementName=Root}"
                                        CommandParameter="{Binding Group}"
                                        IsEnabled="{Binding GroupRole, Converter={StaticResource isAdminConverter}}">
                                <TextBlock>Delete group</TextBlock>
                              </Button>
                            </StackPanel>
                          </styles:Card>
                        </ControlTemplate>
                      </ContextMenu.Template>
                    </ContextMenu>
                  </Button.ContextMenu>
                  <Ellipse Height="50" Width="50"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center">
                    <Ellipse.Fill>
                      <ImageBrush Stretch="UniformToFill" Source="{Binding Group.Image}"></ImageBrush>
                    </Ellipse.Fill>
                  </Ellipse>
                </Button>
              </Panel>             
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollViewer>
    </StackPanel>
    <Panel Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" MinWidth="200"
           HorizontalAlignment="Stretch"
           VerticalAlignment="Stretch"
           IsVisible="{Binding ActiveChatViewModel, Converter={x:Static ObjectConverters.IsNull}}">
      <Border Padding="15,10,15,10" BorderThickness="3" BorderBrush="Aqua">
        <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Top">
          <Label Margin="0,5,0,5">Group Controls</Label>
          <styles:Card HorizontalAlignment="Stretch" Padding="20">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
              <Button Classes="Light" Command="{Binding CreateGroupCommand}">
                Create New Group
              </Button>
            </StackPanel>
          </styles:Card>
        </StackPanel>
      </Border>
    </Panel>
    <Carousel Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" MinWidth="200"
                Items="{Binding ChatViewModels}"
                SelectedItem="{Binding ActiveChatViewModel, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsVisible="{Binding ActiveChatViewModel, Converter={x:Static ObjectConverters.IsNotNull}}">
      <Carousel.ItemTemplate>
        <DataTemplate>
          <Panel HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">
            <views:ChatView DataContext="{Binding}"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
            </views:ChatView>
          </Panel>
        </DataTemplate>
      </Carousel.ItemTemplate>  
    </Carousel>
    <StackPanel Grid.Row="0" Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Margin="0,0,15,0">
      <ToggleButton Name="notificationButton"
              Classes="" assist:ButtonAssist.CornerRadius="35"
              Height="35" Width="35"
              HorizontalContentAlignment="Center"
              VerticalContentAlignment="Center"
              Padding="0,0,0,0">
        <Panel HorizontalAlignment="Right"
               VerticalAlignment="Center">
          <icons:MaterialIcon Kind="BellOutline"
                    Height="20" Width="20"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
          </icons:MaterialIcon>
          <icons:MaterialIcon Name="alertIcon" Kind="BellRingOutline"
                    Height="20" Width="20"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsVisible="{Binding NotificationsViewModel.HasUnread}">
          </icons:MaterialIcon>
        </Panel>
      </ToggleButton>
      <Popup Name="myPopup" 
             IsOpen="{Binding #notificationButton.IsChecked, Mode=TwoWay}"
             StaysOpen="False"
             PlacementMode="Left"
             PlacementTarget="{Binding ElementName=notificationButton}"
             PlacementAnchor="BottomRight">
        <views:NotificationsView DataContext="{Binding NotificationsViewModel}">
        </views:NotificationsView>
      </Popup>
    </StackPanel> 
    <Border Grid.Row="0" DataContext="{Binding LoggedInUser}" Grid.Column="2" MinWidth="164">
      <Button Classes="Flat" HorizontalContentAlignment="Left">
        <Grid Margin="4,0,0,4"
              ColumnDefinitions="40,*"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
          <Ellipse Grid.Column="0"
                   Height="35" Width="35"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center">
            <Ellipse.Fill>
              <ImageBrush Stretch="UniformToFill" Source="{Binding AvatarImage, FallbackValue=null}"></ImageBrush>
            </Ellipse.Fill>
          </Ellipse>
          <TextBlock Padding="5,0,0,0" Grid.Column="1" Text="{Binding Username}"
               VerticalAlignment="Center"
               HorizontalAlignment="Left"
               TextWrapping="NoWrap">
          </TextBlock>
        </Grid>
        <Button.ContextMenu>
          <ContextMenu>
            <ContextMenu.Template>
              <ControlTemplate TargetType="ContextMenu">
                <styles:Card Padding="2" Margin="0">
                  <StackPanel>
                    <StackPanel.Styles>
                      <Style Selector="Button">
                        <Setter Property="Padding" Value="2,2,2,2"></Setter>
                        <Setter Property="Margin" Value="0,2,0,2"></Setter>
                        <Setter Property="assist:ButtonAssist.CornerRadius" Value="2"></Setter>
                      </Style>
                      <Style Selector="Button > TextBlock">
                        <Setter Property="FontSize" Value="13"></Setter>
                        <Setter Property="FontWeight" Value="Normal"></Setter>
                        <Setter Property="Foreground" Value="{StaticResource ThemeBackgroundBrush}"></Setter>
                      </Style>
                    </StackPanel.Styles>
                    <Button   Classes="Flat"
                              Command="{Binding DataContext.EditUserCommand, ElementName=Root}"
                              CommandParameter="{Binding}">
                      <TextBlock>Edit user</TextBlock>
                    </Button>
                    <Button   Classes="Flat"
                              Command="{Binding DataContext.LogoutCommand, ElementName=Root}">
                      <TextBlock>Logout</TextBlock>
                    </Button>
                  </StackPanel>
                </styles:Card>
              </ControlTemplate>
            </ContextMenu.Template>
          </ContextMenu>
        </Button.ContextMenu>
      </Button>
    </Border>
    <ScrollViewer Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"
             VerticalScrollBarVisibility="Auto"
             HorizontalScrollBarVisibility="Disabled">
      <ItemsControl Items="{Binding ActiveGroup.SortedGroupUsers}"
                     Name="userListBox" 
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     Margin="0,5,0,5">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Button Classes="Flat" HorizontalContentAlignment="Left" 
                    ToolTip.Tip="{Binding GroupRole}">
              <Grid Margin="4,0,0,4"
                    ColumnDefinitions="40, *"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ShowGridLines="True">
                <Panel Grid.Column="0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Height="35" Width="35">
                  <Ellipse Height="35" Width="35"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center">
                    <Ellipse.Fill>
                      <ImageBrush Stretch="UniformToFill" Source="{Binding User.AvatarImage}"></ImageBrush>
                    </Ellipse.Fill>
                  </Ellipse>
                  <Ellipse Height="9" Width="9"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Bottom"
                           Fill="Green">
                    <Ellipse.IsVisible>
                      <MultiBinding Converter="{x:Static BoolConverters.Or}">
                        <Binding Path="User.IsOnline" FallbackValue="false" Mode="OneWay"></Binding>
                        <MultiBinding Converter="{StaticResource areEqualIntegersConverter}" ConverterParameter="false">
                          <Binding Path="User.Id" FallbackValue="-1" Mode="OneWay"></Binding>
                          <Binding Path="DataContext.LoggedInUser.Id" ElementName="Root" Mode="OneWay"></Binding>
                        </MultiBinding>
                      </MultiBinding>
                    </Ellipse.IsVisible>
                  </Ellipse>
                </Panel>
                <TextBlock Padding="5,0,0,0" Grid.Column="1" Text="{Binding User.Username}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           TextWrapping="NoWrap">
                </TextBlock>
              </Grid>
              <Button.ContextMenu>
                <ContextMenu>
                  <ContextMenu.Template>
                    <ControlTemplate TargetType="ContextMenu">
                      <styles:Card Padding="2" Margin="0">
                        <StackPanel>
                          <StackPanel.Styles>
                            <Style Selector="Button">
                              <Setter Property="Padding" Value="2,2,2,2"></Setter>
                              <Setter Property="Margin" Value="0,2,0,2"></Setter>
                              <Setter Property="assist:ButtonAssist.CornerRadius" Value="2"></Setter>
                            </Style>
                            <Style Selector="Button > TextBlock">
                              <Setter Property="FontSize" Value="13"></Setter>
                              <Setter Property="FontWeight" Value="Normal"></Setter>
                              <Setter Property="Foreground" Value="{StaticResource ThemeBackgroundBrush}"></Setter>
                            </Style>
                          </StackPanel.Styles>
                          <Button   Classes="Flat"
                                    Command="{Binding DataContext.ChangeRoleCommand, ElementName=Root}"
                                    CommandParameter="{Binding User}"
                                    IsEnabled="{Binding DataContext.IsActiveGroupAdmin, ElementName=Root}">
                            <TextBlock>Change role</TextBlock>
                          </Button>
                          <Button   Classes="Flat"
                                    Command="{Binding DataContext.KickUserCommand, ElementName=Root}"
                                    CommandParameter="{Binding User}"
                                    IsEnabled="{Binding DataContext.IsActiveGroupAdmin, ElementName=Root}">
                            <TextBlock>Kick user</TextBlock>
                            <Button.IsVisible>
                              <MultiBinding Converter="{StaticResource areEqualIntegersConverter}" ConverterParameter="true">
                                <Binding Path="User.Id" FallbackValue="-1" Mode="OneWay"></Binding>
                                <Binding Path="DataContext.LoggedInUser.Id" ElementName="Root" Mode="OneWay"></Binding>
                              </MultiBinding>
                            </Button.IsVisible>
                          </Button>
                        </StackPanel>
                      </styles:Card>
                    </ControlTemplate>
                  </ContextMenu.Template>
                </ContextMenu>
              </Button.ContextMenu>
            </Button>           
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </ScrollViewer>
  </Grid>
</UserControl>
