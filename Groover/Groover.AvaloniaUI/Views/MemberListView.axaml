<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:assist="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
             xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:utils="using:Groover.AvaloniaUI.Utils"
             xmlns:views="using:Groover.AvaloniaUI.Views"
             xmlns:chatViews="using:Groover.AvaloniaUI.Views.Chat"
             xmlns:viewModels="using:Groover.AvaloniaUI.ViewModels"
             mc:Ignorable="d"
             x:Class="Groover.AvaloniaUI.Views.MemberListView"
             Name="Root">
  <UserControl.Resources>
    <SolidColorBrush x:Key="ThemeDarkerElementBrush" Color="#1b1b1b" Opacity="0.8"></SolidColorBrush>
    <SolidColorBrush x:Key="ThemeDarkerMedElementBrush" Color="#1b1b1b" Opacity="0.5"></SolidColorBrush>
    <StackLayout x:Key="VerticalStackLayout"
                        Orientation="Vertical"/>
    <utils:IsAdminConverter x:Key="isAdminConverter"/>
    <utils:AreEqualIntegersConverter x:Key="areEqualIntegersConverter" />
  </UserControl.Resources>
  <ScrollViewer
         VerticalScrollBarVisibility="Auto"
         HorizontalScrollBarVisibility="Disabled">
    <ItemsControl Items="{Binding ActiveGroup.SortedGroupUsers}"
                   Name="userListBox"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Margin="0,5,0,5">
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Button Classes="Flat" HorizontalContentAlignment="Left"
                  ToolTip.Tip="{Binding GroupRole}" Focusable="False">
            <Grid Margin="4,0,0,4"
                  ColumnDefinitions="40, *"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
              <Panel Grid.Column="0"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Center"
                     Height="35" Width="35">
                <Ellipse Height="35" Width="35"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center">
                  <Ellipse.Fill>
                    <ImageBrush Stretch="UniformToFill" Source="{Binding User.AvatarImage}"></ImageBrush>
                  </Ellipse.Fill>
                </Ellipse>
                <Ellipse Height="9" Width="9"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Bottom"
                         Fill="Green">
                  <Ellipse.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.Or}">
                      <Binding Path="User.IsOnline" FallbackValue="false" Mode="OneWay"></Binding>
                      <MultiBinding Converter="{StaticResource areEqualIntegersConverter}" ConverterParameter="false">
                        <Binding Path="User.Id" FallbackValue="-1" Mode="OneWay"></Binding>
                        <Binding Path="DataContext.LoggedInUser.Id" ElementName="Root" Mode="OneWay"></Binding>
                      </MultiBinding>
                    </MultiBinding>
                  </Ellipse.IsVisible>
                </Ellipse>
              </Panel>
              <TextBlock Padding="5,0,0,0" Grid.Column="1" Text="{Binding User.Username}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Left"
                         TextWrapping="NoWrap">
              </TextBlock>
            </Grid>
            <Button.ContextMenu>
              <ContextMenu>
                <ContextMenu.Template>
                  <ControlTemplate TargetType="ContextMenu">
                    <styles:Card Padding="2" Margin="0">
                      <StackPanel>
                        <StackPanel.Styles>
                          <Style Selector="Button">
                            <Setter Property="Padding" Value="2,2,2,2"></Setter>
                            <Setter Property="Margin" Value="0,2,0,2"></Setter>
                            <Setter Property="assist:ButtonAssist.CornerRadius" Value="2"></Setter>
                          </Style>
                          <Style Selector="Button > TextBlock">
                            <Setter Property="FontSize" Value="13"></Setter>
                            <Setter Property="FontWeight" Value="Normal"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource ThemeBackgroundBrush}"></Setter>
                          </Style>
                        </StackPanel.Styles>
                        <Button   Classes="Flat"
                                  Command="{Binding DataContext.ChangeRoleCommand, ElementName=Root}"
                                  CommandParameter="{Binding User}"
                                  IsEnabled="{Binding DataContext.IsActiveGroupAdmin, ElementName=Root}">
                          <TextBlock>Change role</TextBlock>
                        </Button>
                        <Button   Classes="Flat"
                                  Command="{Binding DataContext.KickUserCommand, ElementName=Root}"
                                  CommandParameter="{Binding User}"
                                  IsEnabled="{Binding DataContext.IsActiveGroupAdmin, ElementName=Root}">
                          <TextBlock>Kick user</TextBlock>
                          <Button.IsVisible>
                            <MultiBinding Converter="{StaticResource areEqualIntegersConverter}" ConverterParameter="true">
                              <Binding Path="User.Id" FallbackValue="-1" Mode="OneWay"></Binding>
                              <Binding Path="DataContext.LoggedInUser.Id" ElementName="Root" Mode="OneWay"></Binding>
                            </MultiBinding>
                          </Button.IsVisible>
                        </Button>
                      </StackPanel>
                    </styles:Card>
                  </ControlTemplate>
                </ContextMenu.Template>
              </ContextMenu>
            </Button.ContextMenu>
          </Button>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </ScrollViewer>
</UserControl>
